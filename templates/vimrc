" {{ ansible_managed }}

{% if plugin_manager == 'vundle' -%}
set nocompatible     " be iMproved, required (vundle)
filetype off         " required (vundle), turns off filetype

if has('nvim')
    let s:editor_root=expand("{{ flavor_info['neovim']['config']['path'] }}")
else
    let s:editor_root=expand("{{ flavor_info['vim']['config']['path'] }}/")
endif

" set the runtime path to include Vundle and initialize
" set rtp+={{ flavor_info[flavor]['config']['path'] }}/bundle/vundle
let &rtp = &rtp . ',' . s:editor_root . '/bundle/vundle/'

call vundle#begin(s:editor_root . '/bundle')

Plugin 'VundleVim/Vundle.vim' " let Vundle manage Vundle, required

" custom plugins
{% for plugin in plugins -%}
{{ "Plugin '%s'" | format(plugin['name']) }}
{% endfor %}

call vundle#end()
{%- endif %}

filetype plugin indent on    " required (vundle) - turns on filetype

{% macro element_config(element) -%}
{% if 'set' in element -%}
{% if 'value' in element['set'] -%}
{%- for k, v in element['set']['value'].items() -%}
{{ "set %s=%s" | format(k, v) }}
{% endfor -%}
{%- endif -%}
{% if 'property' in element['set'] -%}
{%- for p in element['set']['property'] -%}
{{ "set %s" | format(p) }}
{% endfor -%}
{%- endif -%}
{%- endif -%}
{% if 'let' in element -%}
{%- for k, v in element['let'].items() -%}
{{ "let %s=%s" | format(k, v) }}
{% endfor -%}
{%- endif -%}
{% if 'other' in element -%}
{%- for o in element['other'] -%}
{{ "%s" | format(o) }}
{% endfor -%}
{%- endif %}

{%- endmacro %}

" Generic settings
{{ element_config(settings) }}

" Custom configuration
{% for plugin in plugins %}
{% if plugin.__len__() > 1 %}
" plugin {{ plugin['name'] }}
{{ element_config(plugin) }}
{% endif -%}
{% endfor %}

" Custom functions
{% for plugin in plugins %}
{% if 'function' in plugin -%}
" plugin {{ plugin['name'] }}
{%- for f in plugin['function'] -%}
{{ "%s" | format(f) }}
{% endfor %}

{% endif -%}
{% endfor %}

" word processor
func! WordProcessorMode()
  setlocal textwidth=80
  setlocal smartindent
  setlocal spell spelllang=en_us
  setlocal noexpandtab
endfu

com! WordProcessor call WordProcessorMode()


